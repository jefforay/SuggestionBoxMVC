@model List<Suggestion>

@{
    ViewData["Title"] = "Suggestion Box";
}

<h3>Home</h3>

@if (Model == null)
{
    <h4>Loading...</h4>
}
else
{
    <form method="get" action="@Url.Action("Index", "Home")">
        <div>
            <label for="eventTypeFilter">Filter by Event Type:</label>
            <select id="eventTypeFilter" name="eventType">
                <option value="">All</option>
                @foreach (var eventType in ViewBag.AllEventTypes)
                {
                    <option value="@eventType">@eventType</option>
                }
            </select>
            <button type="submit">Filter</button>
        </div>
    </form>

    <div class="table" style="overflow: auto; padding-bottom: 40px;">
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Date Time Start</th>
                    <th>Date Time End</th>
                    <th>Category</th>
                    <th>Description</th>
                    <th>Title</th>
                    <th>User Id</th>
                    <th>User Name</th>
                    <th>Event Type</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody id="suggestionsTableBody">
                @foreach (var suggestion in Model)
                {
                    <tr id="suggestion-@suggestion.Id">
                        <td data-field="Index">@suggestion.Id</td>
                        <td contenteditable="true" data-field="DateTimeStart">@suggestion.DateTimeStart?.ToString("dd-MM-yyyy HH:mm:ss")</td>
                        <td contenteditable="true" data-field="DateTimeEnd">@suggestion.DateTimeEnd?.ToString("dd-MM-yyyy HH:mm:ss")</td>
                        <td contenteditable="true" data-field="Category">@string.Join(", ", suggestion.Category)</td>
                        <td contenteditable="true" data-field="Description">@Html.Raw(suggestion.Description)</td>
                        <td contenteditable="true" data-field="Title">@suggestion.Title</td>
                        <td contenteditable="true" data-field="UserId">@suggestion.UserId</td>
                        <td contenteditable="true" data-field="UserName">@suggestion.UserName</td>
                        <td contenteditable="true" data-field="EventType">@suggestion.EventType</td>
                        <td>
                            <button type="button" class="btn btn-primary" onclick="saveEdit(@suggestion.Id)">Save</button>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="deleteSuggestion(@suggestion.Id)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

    <script>
        function saveEdit(id) {
            var row = document.getElementById(`suggestion-${id}`);
            var suggestion = {
                Id: parseInt(row.querySelector(`[data-field='Index']`).textContent.trim(), 10) || null,
                Onderwerp: row.querySelector(`[data-field='Title']`).textContent.trim(),
                Beschrijving: row.querySelector(`[data-field='Description']`).textContent.trim(),
                UserId: parseInt(row.querySelector(`[data-field='UserId']`).textContent.trim(), 10) || null,
                UserName: row.querySelector(`[data-field='UserName']`).textContent.trim(),
                Type: row.querySelector(`[data-field='EventType']`).textContent.trim(),
                BeginDatum: row.querySelector(`[data-field='DateTimeStart']`).textContent.trim(),
                EindDatum: row.querySelector(`[data-field='DateTimeEnd']`).textContent.trim(),
                Categories: row.querySelector(`[data-field='Category']`).textContent.trim().split(',').map(s => s.trim())
            };

            fetch(`/Home/Edit`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(suggestion)
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => { throw new Error(err.message); });
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Success:', data);
                })
                .catch(error => console.error('Error:', error));
        }

        function deleteSuggestion(id) {
            if (confirm('Are you sure you want to delete this suggestion?')) {
                fetch(`/Home/Delete/${id}`, {
                    method: 'DELETE'
                })
                    .then(response => {
                        if (response.ok) {
                            var row = document.getElementById(`suggestion-${id}`);
                            if (row) {
                                row.remove();
                            }
                        } else {
                            return response.json().then(err => { throw new Error(err.message); });
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }
        }

        var connection = new signalR.HubConnectionBuilder().withUrl("/suggestionHub").build();

        connection.start().then(function () {
            console.log("SignalR Connected");

            connection.on("ReceiveSuggestion", function (suggestion) {
                console.log("Received suggestion:", suggestion);
                var tableBody = document.getElementById("suggestionsTableBody");
                var newRow = document.createElement("tr");
                newRow.id = `suggestion-${suggestion.id}`;

                var categoriesString = suggestion.category ? suggestion.category.join(", ") : "";

                newRow.innerHTML = `
                        <td>${suggestion.id}</td>
                        <td contenteditable="true" data-field="DateTimeStart">${formatDateTime(suggestion.dateTimeStart)}</td>
                        <td contenteditable="true" data-field="DateTimeEnd">${formatDateTime(suggestion.dateTimeEnd)}</td>
                        <td contenteditable="true" data-field="Category">${categoriesString}</td>
                        <td contenteditable="true" data-field="Description">${suggestion.description}</td>
                        <td contenteditable="true" data-field="Title">${suggestion.title}</td>
                        <td contenteditable="true" data-field="UserId">${suggestion.userId}</td>
                        <td contenteditable="true" data-field="UserName">${suggestion.userName}</td>
                        <td contenteditable="true" data-field="EventType">${suggestion.eventType}</td>
                        <td><button type="button" class="btn btn-primary" onclick="saveEdit(${suggestion.id})">Save</button></td>
                        <td><button type="button" class="btn btn-danger" onclick="deleteSuggestion(${suggestion.id})">Delete</button></td>
                    `;

                tableBody.insertBefore(newRow, tableBody.firstChild);
            });

            connection.on("RemoveSuggestion", function (id) {
                console.log("Removing suggestion with ID:", id);
                var row = document.getElementById(`suggestion-${id}`);
                if (row) {
                    row.remove();
                }
            });
        }).catch(function (err) {
            console.error("SignalR Connection Error:", err);
        });
    </script>
}